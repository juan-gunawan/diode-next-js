{"version":3,"file":"static/webpack/static/development/pages/index.js.37b17914a27644322a1b.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react';\nimport Diode from 'react-diode';\n// import axios from 'axios';\n\n// Component\nimport ImageDisplay from '../components/ImageDisplay';\n\n// Diode\nimport DiodeNetworkLayer from '../utils/DefaultDiodeNetworkLayer';\nimport CRNetworkLayer from '../utils/FakeNetworkLayer';\n\n// Diode.injectNetworkLayer(new DiodeNetworkLayer());\nDiode.injectNetworkLayer(new CRNetworkLayer());\n\n/**\n * Store - \n * \n */\n\nclass Home extends React.Component {\n  static async getInitialProps(ctx) {\n    if (ctx.req) {\n      // Diode setup\n      \n      const cache = await Diode.Store.forceFetch(ImageDisplay);\n      \n      // const img = await axios.get('https://jsonplaceholder.typicode.com/photos');\n\n      return { cache };\n    }\n\n    return { cache: window.__NEXT_DATA__.props.pageProps };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.cache = Diode.createCache(props.cache);\n    console.log('CACHE', this.cache);\n  }\n\n  render () {\n    return (\n      <div>\n        <Diode.CacheProvider value={this.cache}> \n          <ImageDisplay />\n        </Diode.CacheProvider>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;;;;AAKA;;;;;;;;;;AACA;;;;;;AACA;;;;;;AAGA;AACA;;AADA;AAIA;AAAA;AAAA;AACA;;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAJA;AAKA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA9BA;AACA;AAgCA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}