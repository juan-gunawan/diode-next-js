{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ImageDisplay.js","webpack:///./pages/index.js","webpack:///./queries/ImageDisplayQuery.js","webpack:///./utils/DefaultDiodeNetworkLayer.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"axios\"","webpack:///external \"react\"","webpack:///external \"react-diode\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React, { Component } from 'react';\nimport Diode from 'react-diode';\n// import Diode from '../react-diode/src/DiodePublic';\nimport ImageDisplayQuery from '../queries/ImageDisplayQuery';\n// import ContentResourceQuery from '../queries/ContentResourceQuery';\n\nclass ImageDisplay extends Component {\n  render() {\n    // console.log(this.props);\n    return (\n      <div>\n        { this.props.contentResource ? 'Yes' : 'No' }\n      </div>\n    );\n  }\n}\n\nexport default Diode.createRootContainer(ImageDisplay, {\n  children: [],\n  queries: {\n    fetchImage: Diode.createQuery(ImageDisplayQuery, {\n      image: 'fragment',\n    }),\n    // contentResource: Diode.createQuery(ContentResourceQuery, {\n    //   hello: {\n    //     world: null,\n    //   },\n    // }),\n  },\n}); \n","import React from 'react';\nimport Diode from 'react-diode';\n// import Diode from '../react-diode/src/DiodePublic';\n\n// Component\nimport ImageDisplay from '../components/ImageDisplay';\n\n// Diode\nimport DiodeNetworkLayer from '../utils/DefaultDiodeNetworkLayer';\n// import CRNetworkLayer from '../utils/FakeNetworkLayer';\n\nDiode.injectNetworkLayer(new DiodeNetworkLayer(''));\n// Diode.injectNetworkLayer(new CRNetworkLayer());\n\nclass Home extends React.Component {\n  static async getInitialProps(ctx) {\n    if (ctx.req) {\n      // Diode setup\n      const cache = await Diode.Store.forceFetch(ImageDisplay);\n\n      return { \n        cache,\n        isServer: true, \n      };\n\n      // return {};\n    }\n    \n    return { cache: window.__NEXT_DATA__.props.pageProps.cache, isServer: false };\n  }\n\n  constructor(props) {\n    super(props);\n\n    let cache = props.cache;\n\n    if (process.browser) {\n      // console.log(window.__NEXT_DATA__.props.pageProps.cache);\n      cache = window.__NEXT_DATA__.props.pageProps.cache\n    }\n\n    this.cache = Diode.createCache(cache);\n    console.log(this.cache.getContents());\n  }\n\n  render () {\n    return (\n      <div>\n        <Diode.CacheProvider value={this.cache}> \n          <ImageDisplay />\n        </Diode.CacheProvider>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import Diode from 'react-diode';\n// import Diode from '../react-diode/src/DiodePublic';\n\nexport default {\n  type: 'fetchImage',\n  request(fragment, params, options) {\n    const url = `https://jsonplaceholder.typicode.com/photos`;\n    const method = 'get';\n\n    const payload = '';\n\n    return Diode.queryRequest(url, method, payload);\n  },\n  resolve(response, fragment, options) {\n    return response.data;\n  },\n};\n","import axios from \"axios\";\n\nclass DiodeDefaultNetworkLayer {\n  _baseApiEndpoint;\n\n  _defaultHeaders;\n\n  // TODO accept fetch options\n  constructor(baseApiEndpoint, options) {\n    this._baseApiEndpoint = baseApiEndpoint;\n    this._defaultHeaders = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    };\n  }\n\n  /**\n   * @public\n   *\n   */\n  sendQueries(queryRequests, options) {\n    const requests = queryRequests.map(query => {\n      /* istanbul ignore next */\n      const headers = options.headers ? options.headers : this._defaultHeaders;\n      const { url, method, payload } = query;\n      const apiUrl = `${this._baseApiEndpoint}${url}`;\n      const fetchParams = {\n        url: apiUrl,\n        method,\n        headers: {\n          ...headers,\n          ...query.headers\n        }\n      };\n\n      /* istanbul ignore else */\n      if (typeof payload === \"object\") {\n        // we use JSON.stringify here because this is what most POST request\n        // body looked like. GET requests are usually in form of query string\n        // which should already handled inside apiUrl. Other type of payload,\n        // like urlencodedform should be generated inside query.generate method\n        fetchParams.data = JSON.stringify(payload);\n      } else if (typeof payload === \"string\") {\n        fetchParams.data = payload;\n      }\n\n      return axios(fetchParams).then(response => {\n        return {\n          // ...response,\n          type: query.type,\n          data: response.data,\n        };\n      });\n    });\n\n    return Promise.all(requests).then(responses => {\n      // Convert array of response into Map<QueryType, QueryResponse>\n      const responseMap = responses.reduce((responseMap, response) => {\n        const { type } = response;\n        responseMap[type] = response;\n        return responseMap;\n      }, {});\n\n      return responseMap;\n    });\n  }\n}\n\n// module.exports.default = DiodeDefaultNetworkLayer;\nexport default DiodeDefaultNetworkLayer;\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"axios\");","module.exports = require(\"react\");","module.exports = require(\"react-diode\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AATA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;;;;;;;;;AACA;;;;;;AACA;;;;;;AAEA;AACA;;AADA;AAEA;AACA;AACA;AAFA;AACA;;AAOA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA,iBAGA;AACA;AACA;AACA;AAXA;AAYA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAvCA;AACA;AAyCA;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAZA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;;;AAKA;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAEA;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAHA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;AAGA;AACA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;ACrEA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}